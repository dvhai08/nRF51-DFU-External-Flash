#ifndef _SST25_H_
#define _SST25_H_
#include <stdint.h>

#define SECTOR_SIZE					4096

#define FLASH_SIZE_MAX			(1*1024*1024)//1Mbytes
#define LOG_SIZE_MAX				(100*1024)
#define FIRMWARE_MAX_SIZE		0x00020000 //128k


#define BASE_FIRMWARE_INFO_ADDR 			0
#define BASE_FIRMWARE_BASE_ADDR			(0x00001000 + BASE_FIRMWARE_INFO_ADDR)

#define FIRMWARE_INFO_ADDR 								(BASE_FIRMWARE_BASE_ADDR + FIRMWARE_MAX_SIZE)
#define FIRMWARE_BASE_ADDR								(0x00001000 + FIRMWARE_INFO_ADDR)

#define PARAMETER_BASE_ADDR		(FIRMWARE_BASE_ADDR + FIRMWARE_MAX_SIZE)

#define CFG_SAVE_ADDR						(0x00000000 + PARAMETER_BASE_ADDR)
#define RESET_CNT_ADDR					(0x00001000 + PARAMETER_BASE_ADDR)
#define MILEAGE_ADDR						(0x00002000 + PARAMETER_BASE_ADDR)
#define SYS_SLEEP_TIME_ADDR			(0x00003000 + PARAMETER_BASE_ADDR)
#define GPS_LAT_ADDR						(0x00004000 + PARAMETER_BASE_ADDR)
#define GPS_LON_ADDR						(0x00005000 + PARAMETER_BASE_ADDR)
#define GPS_HDOP_ADDR						(0x00006000 + PARAMETER_BASE_ADDR)
#define GPS_DIR_ADDR						(0x00007000 + PARAMETER_BASE_ADDR)
#define CELL_LAT_ADDR						(0x00008000 + PARAMETER_BASE_ADDR)
#define CELL_LON_ADDR						(0x00009000 + PARAMETER_BASE_ADDR)
#define CELL_HDOP_ADDR					(0x0000A000 + PARAMETER_BASE_ADDR)
#define SYSCONFIG_ADDR					(0x0000B000 + PARAMETER_BASE_ADDR)
#define TIME_SAVE_ADDR					(0x0000C000 + PARAMETER_BASE_ADDR)
#define OPEN_DOOR_COUNTER_ADDR	(0x0000D000 + PARAMETER_BASE_ADDR)
#define LOG_POSITION_ADDR				(0x0000E000 + PARAMETER_BASE_ADDR)
#define LOG_DATABASE_ADDR				(0x0000F000 + PARAMETER_BASE_ADDR)

#define LOG_DATA_SIZE_MAX  LOG_SIZE_MAX

#define FIRMWARE_STATUS_OFFSET			(1)
#define FIRMWARE_FILE_SIZE_OFFSET		(2)
#define FIRMWARE_CRC_OFFSET					(3)
#define FIRMWARE_START_ADDR_OFFSET	(4)
#define FIRMWARE_ERR_ADDR_OFFSET		(5)

#define FIRMWARE_FILE_SIZE_ERR		0xAAAAAAAA
#define FIRMWARE_START_ADDR_ERR		0xBBBBBBBB
#define FIRMWARE_END_ADDR_ERR			0xCCCCCCCC
#define FIRMWARE_CRC_ERR					0xDDDDDDDD

enum SST25_ERASE_MODE {
    all,
    block4k,
    block32k,
    block64k
};

uint8_t MX25L_Init(void);
uint8_t SST25_Erase(uint32_t addr, enum SST25_ERASE_MODE mode);
uint8_t SST25_Read(uint32_t addr, uint8_t *buf, uint32_t count);
uint8_t SST25_Write(uint32_t addr, const uint8_t *buf, uint32_t count);
uint8_t MX25L__DeepPowerDown(uint8_t enable);
#endif
